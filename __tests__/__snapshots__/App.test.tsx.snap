// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            collapsable={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              [
                {
                  "display": "flex",
                  "overflow": undefined,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              {
                "close": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": {
                  "animation": "spring",
                  "config": {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "flex": 1,
                  "marginTop": 0,
                }
              }
            >
              <View
                collapsable={false}
                handlerTag={1}
                handlerType="PanGestureHandler"
                needsOffscreenAlphaCompositing={false}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  {
                    "flex": 1,
                    "transform": [
                      {
                        "translateX": 0,
                      },
                      {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      [
                        {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          {
                            "display": "flex",
                            "flex": 1,
                            "width": "100%",
                          }
                        }
                      >
                        <Image
                          resizeMode="cover"
                          source={
                            {
                              "uri": "https://img.freepik.com/free-vector/blur-pink-blue-abstract-gradient-background-vector_53876-174836.jpg",
                            }
                          }
                          style={
                            [
                              {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              {
                                "height": undefined,
                                "width": "100%",
                              },
                              undefined,
                            ]
                          }
                        />
                        <View
                          style={
                            {
                              "alignItems": "center",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "alignItems": "center",
                                "borderRadius": 15,
                                "flexDirection": "column",
                                "justifyContent": "center",
                              }
                            }
                          >
                            <TextInput
                              maxLength={10}
                              onChangeText={[Function]}
                              placeholder="Enter Country Name"
                              style={
                                {
                                  "backgroundColor": "#fff",
                                  "borderColor": "black",
                                  "borderRadius": 10,
                                  "borderWidth": 1,
                                  "padding": 15,
                                  "width": 200,
                                }
                              }
                              value=""
                            />
                            <View
                              style={
                                {
                                  "flexDirection": "row",
                                  "gap": 10,
                                  "height": 50,
                                }
                              }
                            >
                              <View
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": true,
                                    "expanded": undefined,
                                    "selected": undefined,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onClick={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  {
                                    "backgroundColor": "green",
                                    "borderRadius": 5,
                                    "marginTop": 10,
                                    "opacity": 0.2,
                                    "padding": 10,
                                    "width": 100,
                                  }
                                }
                              >
                                <Text
                                  style={
                                    {
                                      "color": "white",
                                      "fontWeight": "bold",
                                      "textAlign": "center",
                                    }
                                  }
                                >
                                  Search
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        pointerEvents="box-none"
        style={
          {
            "height": 44,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</View>
`;
